services:
  # PostgreSQL Database
  omnipath-next-postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: omnipath  # Create omnipath database on init
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db_build/_scripts/init_postgres.sh:/docker-entrypoint-initdb.d/01-init.sh
    ports:
      - "5432:5432"  # Expose PostgreSQL on port 543
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  omnipath-nextjs:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Pass core variables for build-time configuration
        NEXT_PUBLIC_ENVIRONMENT: ${ENVIRONMENT}
        NEXT_PUBLIC_DOMAIN: ${DOMAIN}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # Mark as dockerized for auto-configuration
      DOCKERIZED: "true"
      # Database URL with Docker service names
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@omnipath-next-postgres:5432/omnipath
    depends_on:
      - omnipath-next-postgres
    ports:
      - "3000:3000"

volumes:
  postgres_data: