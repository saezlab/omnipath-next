services:
  # PostgreSQL Database
  omnipath-next-postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: omnipath  # Create omnipath database on init
    volumes:
      - omnipath-next-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  # Expose PostgreSQL on port 543
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js Application
  omnipath-nextjs:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Pass database URLs for build time (from .env file)
        DATABASE_URL_PROD: ${DATABASE_URL_PROD}
        DATABASE_URL_DEV: ${DATABASE_URL_DEV}
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # Database URLs from .env file
      DATABASE_URL_PROD: ${DATABASE_URL_PROD}
      DATABASE_URL_DEV: ${DATABASE_URL_DEV}
      # API Keys for runtime
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      GROQ_API_KEY: ${GROQ_API_KEY}
    depends_on:
      - omnipath-next-postgres

volumes:
  omnipath-next-postgres-data: